{"version":3,"sources":["containers/search/Search.js","components/collection-card/CollectionCard.js","containers/navigation/Navigation.js","components/card/GalleryCard.js","containers/pagination/Pagination.js","components/navbar/Navbar.js","containers/Collections/CollectionList.js","containers/Photos/PhotosList.js","containers/SearchResults/SearchResults.js","store/actions/index.js"],"names":["Search","props","handleChange","e","setState","keyword","target","value","onSubmit","state","history","push","onKeypress","key","renderSearchButton","location","pathname","variant","onClick","className","prevProps","pagingType","this","onChange","onKeyPress","placeholder","React","Component","connect","currentPage","searchKeyword","requestSearchPhotos","requestCollection","requestPhotos","requestSearchCollections","requestPagination","CollectionCard","undefined","previewPhotos","previewImages","map","request","xs","urls","thumb","style","backgroundImage","tags","tag","pill","title","to","id","Body","Title","Text","description","Footer","totalPhotos","Navigation","getCollections","getPhotos","GalleryCard","useState","modalShow","setModalShow","alert","useAlert","src","url","loading","isVisible","Img","user","profile_image","small","roundedCircle","name","downloadImageId","show","icon","faLongArrowAltDown","created_at","faHeart","likes","size","aria-labelledby","centered","Header","closeButton","imageurl","onHide","Pagination","getNext","collectionsId","requestCollectionPhotos","nextPage","getPrev","prevPage","disabled","rel","NavElement","sticky","bg","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","inline","CollectionList","renderCollectionList","collections","photo","preview_photos","total_photos","requestPagingType","Object","values","PhotosList","downloadImage","imageId","requestDownloadPhoto","renderPhotosList","photos","convertTime","full","createdAt","Date","toLocaleDateString","weekday","year","month","day","SearchResults","renderSearchHeader","handleSelect","console","log","computedMatch","params","renderSearchResults","Tabs","defaultActiveKey","onSelect","Tab","eventKey","CardColumns","renderContent","Container","page","type","REQUEST_PHOTOS","payload","REQUEST_SEARCH_PHOTOS","REQUEST_COLLECTIONS","REQUEST_SEARCH_COLLECTIONS","REQUEST_COLLECTION_PHOTOS","requestRelatedCollections","REQUEST_RELATED_COLLECTIONS","REQUEST_DOWNLOAD_PHOTO","REQUEST_PAGINATION","pageType","REQUEST_PAGINATION_TYPE","requestCollectionId","REQUEST_COLLECTION_ID"],"mappings":"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","file":"static/js/6.0f7cfb03.chunk.js","sourcesContent":["import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Search.scss';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    requestSearchPhotos, \r\n    requestPhotos, \r\n    requestSearchCollections, \r\n    requestCollection,\r\n    requestPagination } from '../../store/actions';\r\nimport history from '../../routes/history';\r\n\r\nclass Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.pagingType !== this.props.pagingType){\r\n            this.setState({\r\n                keyword : \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // const { pagingType , requestPhotos , requestCollection } = this.props ;\r\n        this.setState({\r\n            keyword: e.target.value\r\n        })\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                keyword: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        this.setState({\r\n            keyword: e.target.value\r\n        })\r\n        if(this.state.keyword){\r\n            history.push(`/search/${this.state.keyword}`);       \r\n        }\r\n    }\r\n\r\n    onKeypress = (e) =>{\r\n        if(e.key == 'Enter'){\r\n            history.push(`/search/${this.state.keyword}`);       \r\n        }\r\n    }\r\n\r\n    renderSearchButton = () => {\r\n        if(history.location.pathname == '/'){\r\n            return(\r\n                <Button variant=\"warning\" onClick={(e) => this.onSubmit(e)} className=\"border-raduis-3 text-white font-weight-bold px-5 searchBtn\">Search</Button>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <Button variant=\"outline-warning\" className=\"border-raduis-3\" onClick={(e) => this.onSubmit(e)}><i className=\"fa fa-search\"></i></Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-100\">\r\n                <div className={'d-flex ' + (history.location.pathname == '/' ? 'search-input' : '')}>\r\n                <FormControl \r\n                    value = {this.state.keyword || \"\"}\r\n                    onChange={e => this.handleChange(e)}\r\n                    onKeyPress={e => this.onKeypress(e)}\r\n                    placeholder=\"Search in Gallery\" \r\n                    className=\"mr-2 border-0 shadow border-raduis-3\" />\r\n                    {this.renderSearchButton()}\r\n                    {/* <InputGroup size=\"lg\" className=\"mr-3 mt-4\">\r\n                        <FormControl\r\n                            value = {this.state.keyword}\r\n                            aria-label=\"Large\"\r\n                            onChange={e => this.handleChange(e)}\r\n                            placeholder=\"Search for images with keywords ( Sky , love .. etc )\"\r\n                            className=\"border-0 shadow border-raduis-3\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\" />\r\n                    </InputGroup>\r\n\r\n                    <Button variant=\"warning\" onClick={(e) => this.onSubmit(e)} className=\"border-raduis-3 text-white font-weight-bold px-5\">Search</Button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        pagingType: state.pagingType , \r\n        searchKeyword: state.searchKeyword\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestSearchPhotos, requestCollection, requestPhotos, requestSearchCollections , requestPagination })(Search);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './CollectionCard.scss';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CollectionCard = (props) => {\r\n    if (props.previewPhotos !== undefined) {\r\n        var previewImages = props.previewPhotos.map((request) => <Col xs={6} key={request.urls.thumb}> <div className=\"backgroundImg\" style={{ backgroundImage: 'url(' + request.urls.thumb + ')' }}> </div></Col>)\r\n        var tags = props.tags.map((tag) => <Badge pill variant=\"warning\" className=\"mr-2\" key={tag.title}>{tag.title}</Badge>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={`/collections/${props.id}`} >\r\n                <Card className=\"border-0 shadow mb-3\">\r\n                    <Container>\r\n                        <Row>\r\n                            {previewImages}\r\n                        </Row>\r\n                    </Container>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            {/* <Image src={props.previewPhotos} roundedCircle /> */}\r\n                            <small className=\"text-secondary\">Collection</small>\r\n                            <strong className=\"d-block\">{props.title}</strong>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {props.description}\r\n                        </Card.Text>\r\n                        {tags}\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"d-flex justify-content-between\">\r\n                        <small className=\"text-muted\">Total Photos : {props.totalPhotos}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionCard;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Navigation.scss';\r\nimport { connect } from 'react-redux';\r\nimport { requestCollection, requestPhotos, requestPagination, requestSearchCollections, requestSearchPhotos } from '../../store/actions';\r\nimport { Link } from \"react-router-dom\";\r\nimport {Nav} from 'react-bootstrap';\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    getCollections = () => {\r\n        const { requestCollection , requestPagination } = this.props ;\r\n        requestCollection(1);\r\n        requestPagination(1);\r\n    }\r\n\r\n    getPhotos = () => {\r\n        const { requestPhotos , requestPagination } = this.props ;\r\n        requestPhotos(1);\r\n        requestPagination(1);\r\n    }\r\n\r\n    render() {\r\n        const { pagingType } = this.props;\r\n        return (\r\n            <div className=\"text-white\">\r\n                <Link to=\"/photos\" onClick={this.getPhotos} className={'navLink ' + (this.props.pagingType == 'photos' ? 'text-warning' : 'text-white mx-2')}>Photos</Link>\r\n                <Link to=\"/collections\" onClick={this.getCollections} className={'navLink '+(this.props.pagingType == 'collections' ? 'text-warning mx-2' : 'text-white mx-2')}>Collections</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pagingType: state.pagingType\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestPhotos, requestCollection, requestPagination, requestSearchCollections, requestSearchPhotos })(Navigation);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLongArrowAltDown ,faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAlert } from 'react-alert'\r\nimport LazyImage from \"react-lazy-progressive-image\";\r\nimport Loader from '../loader/Loader';\r\nimport {Modal , ModalDialog  , ModalHeader  , ModalTitle  , ModalBody ,ModalFooter , Button } from 'react-bootstrap'\r\nimport './GalleryCard.scss';\r\n\r\nconst GalleryCard = (props) => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const alert = useAlert();\r\n    function download() {\r\n        props.downloadImageId(props.id)\r\n        alert.show('Thanks , Wait Downloading');\r\n    }\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n        // console.log(props);\r\n        return (\r\n          <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                {/* <FontAwesomeIcon onClick={download} icon={faLongArrowAltDown} className=\"text-warning downloadIcon\"/> */}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0\">\r\n                <div className=\"backgroundImg\" style={{ backgroundImage: 'url(' + props.imageurl + ')' }}> </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"border-0 shadow mb-3\" onClick={() => setModalShow(true)}>\r\n                <div className=\"zoom-in-image\">\r\n                <LazyImage               \r\n                    placeholder={\"https://cdn.dribbble.com/users/2046015/screenshots/6015680/08_404.gif\"}\r\n                    src={props.url}\r\n                >\r\n                    {(src, loading, isVisible) =><Card.Img variant=\"top\"  src={src} />\r\n}\r\n                </LazyImage>\r\n                </div>\r\n                <Card.Body>\r\n                    <Card.Title className=\"d-flex justify-content-between\">\r\n                        <div className=\"userData\">\r\n                            <Image src={props.user.profile_image.small} roundedCircle />\r\n                            <small className=\"mx-2\">{props.user.name}</small>\r\n                        </div>\r\n                    <FontAwesomeIcon onClick={download} icon={faLongArrowAltDown} className=\"text-warning downloadIcon\"/>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {props.description}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer className=\"d-flex justify-content-between\">\r\n                    <small className=\"text-muted\">{props.created_at}</small>\r\n                    <small className=\"text-muted\">\r\n                        <FontAwesomeIcon icon={faHeart} className=\"mr-1\"/>\r\n                        {props.likes}\r\n                    </small>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                imageurl = {props.url}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    requestPagination,\r\n    requestPhotos,\r\n    requestSearchPhotos,\r\n    requestCollection,\r\n    requestSearchCollections,\r\n    requestCollectionPhotos\r\n} from '../../store/actions/index';\r\nclass Pagination extends React.Component {\r\n    getNext = () => {\r\n        const { collectionsId , \r\n            searchKeyword , \r\n            requestPagination , \r\n            requestPhotos , \r\n            requestSearchCollections , \r\n            requestSearchPhotos , \r\n            currentPage , \r\n            pagingType , \r\n            requestCollection ,\r\n            requestCollectionPhotos } = this.props;\r\n        let nextPage = currentPage + 1;\r\n        requestPagination(nextPage);\r\n        if (pagingType === 'photos') {\r\n            requestPhotos(nextPage);\r\n        }\r\n        else if (pagingType === 'search_photos') {\r\n            requestSearchPhotos(nextPage, searchKeyword.keyword);\r\n        }\r\n        else if (pagingType === 'collections') {\r\n            requestCollection(nextPage);\r\n        }\r\n        else if (pagingType === 'search_collections') {\r\n            requestSearchCollections(nextPage,searchKeyword.keyword);\r\n        }\r\n        else if (pagingType === 'collection-photos') {\r\n            requestCollectionPhotos(nextPage, collectionsId);\r\n        }\r\n    }\r\n\r\n    getPrev = () => {        \r\n        const { collectionsId , \r\n            searchKeyword , \r\n            requestPagination , \r\n            requestPhotos , \r\n            requestSearchCollections , \r\n            requestSearchPhotos , \r\n            currentPage , \r\n            pagingType ,\r\n            requestCollectionPhotos } = this.props;\r\n        if (currentPage > 1) {\r\n            let prevPage = currentPage - 1;\r\n            requestPagination(prevPage);\r\n            if (pagingType === 'photos') {\r\n                requestPhotos(prevPage);\r\n            }\r\n            else if (pagingType === 'search_photos') {\r\n               requestSearchPhotos(prevPage, searchKeyword.keyword);\r\n            }\r\n            else if (pagingType === 'collections') {\r\n               requestCollection(prevPage);\r\n            }\r\n            else if (pagingType === 'search_collections') {\r\n                requestSearchCollections(prevPage, searchKeyword.keyword);\r\n            }\r\n            else if (pagingType === 'collection-photos') {\r\n                requestCollectionPhotos(prevPage, collectionsId);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n                <Button variant=\"outline-warning\" onClick={this.getPrev} className=\"border-raduis-3 text-white px-5\" disabled={this.props.currentPage === 1}>Prev</Button>\r\n                <h6 className=\"text-white mb-0\">Page {this.props.currentPage}</h6>\r\n                <Button variant=\"outline-warning\" onClick={this.getNext} className=\"border-raduis-3 text-white px-5\" rel=\"last\">Next</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        pagingType: state.pagingType,\r\n        searchKeyword: state.searchKeyword,\r\n        collectionsId: state.collectionsId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestPagination, requestPhotos, requestSearchPhotos, requestCollection, requestSearchCollections, requestCollectionPhotos })(Pagination);","import React from 'react' ;\r\nimport {Navbar , Nav , Form , FormControl , Button} from 'react-bootstrap';\r\nimport './Navbar.scss';\r\nimport Navigation from '../../containers/navigation/Navigation'\r\nimport Search from '../../containers/search/Search';\r\nconst NavElement = () => {\r\n\r\n    return(\r\n        <Navbar sticky=\"top\"  bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"md\">\r\n            <Navbar.Brand href=\"/\">Gallery</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n               <Navigation />\r\n            </Nav>\r\n            <Form inline>\r\n                <Search />\r\n            </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavElement ;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestCollection , requestPagingType} from '../../store/actions';\r\nimport CollectionCard from '../../components/collection-card/CollectionCard';\r\nimport '../search/Search.scss';\r\nimport history from '../../routes/history';\r\nimport Loader from '../../components/loader/Loader';\r\n\r\nclass CollectionList extends React.Component {\r\n    componentDidMount() {\r\n        if(history.location.pathname == '/collections'){\r\n            const { requestCollection , requestPagingType } = this.props ;\r\n            // requestCollection(1);\r\n            requestPagingType('collections')\r\n        }\r\n    }\r\n\r\n    renderCollectionList = () => {\r\n        const { collections } = this.props;\r\n        if (!collections) {\r\n            return (\r\n               <Loader />\r\n            )\r\n            \r\n        }\r\n        else {\r\n            return collections.map(photo => {\r\n                const { id , preview_photos , tags , title , total_photos , description } = photo ;\r\n                return (\r\n                    <CollectionCard\r\n                        id={id}\r\n                        key={id}\r\n                        previewPhotos={preview_photos}\r\n                        tags={tags}\r\n                        title={title}\r\n                        totalPhotos={total_photos}\r\n                        description={description}\r\n                    />\r\n                )\r\n\r\n            })\r\n           \r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCollectionList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collections: Object.values(state.collections)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { requestCollection , requestPagingType})(CollectionList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestPhotos, requestDownloadPhoto , requestPagingType } from '../../store/actions/index';\r\nimport GalleryCard from '../../components/card/GalleryCard';\r\nimport history from '../../routes/history';\r\n\r\nclass PhotosList extends React.Component {\r\n    componentDidMount() {\r\n        if(history.location.pathname == '/photos'){\r\n            const { requestPhotos , requestPagingType } = this.props ;\r\n            requestPhotos(1);\r\n            requestPagingType('photos')\r\n        }\r\n    }\r\n\r\n    downloadImage = (imageId) => {\r\n        const { requestDownloadPhoto } = this.props ;\r\n        requestDownloadPhoto(imageId);\r\n    }\r\n\r\n    renderPhotosList = () => {\r\n        return this.props.photos.map(photo => {\r\n            const { id , urls , description , likes , user } = photo ;\r\n            let { created_at } = photo ;\r\n            created_at = this.convertTime(photo.created_at);\r\n            return (\r\n                <GalleryCard\r\n                    id={id}\r\n                    key={id}\r\n                    url={urls.full}\r\n                    name={id}\r\n                    created_at={created_at}\r\n                    description={description}\r\n                    likes={likes}\r\n                    user={user}\r\n                    downloadImageId={this.downloadImage}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    convertTime(createdAt) {\r\n        let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n        let created_at_date = new Date(createdAt).toLocaleDateString('en-US', options);\r\n        return created_at_date;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderPhotosList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photos: Object.values(state.photos)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { requestPhotos, requestDownloadPhoto , requestPagingType})(PhotosList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PhotosList from '../Photos/PhotosList';\r\nimport CollectionList from '../Collections/CollectionList';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport { Container } from 'react-bootstrap';\r\nimport { requestCollection, requestSearchPhotos, requestSearchCollections, requestPagingType, requestPagination } from '../../store/actions';\r\nimport history from '../../routes/history';\r\nimport Pagination from '../pagination/Pagination';\r\nimport NavElement from '../../components/navbar/Navbar';\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport './SearchResults.scss';\r\nimport { request } from 'http';\r\n\r\nclass SearchResults extends React.Component {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.pagingType);\r\n        if (history.location.pathname !== '/photos' && history.location.pathname !== '/collections') {\r\n            console.log(\"HEREEEEEE\")\r\n            this.props.requestSearchPhotos(this.props.currentPage, this.props.computedMatch.params.keyword);\r\n            this.props.requestPagingType('search_photos');\r\n        }\r\n        else if (history.location.pathname == '/collections') {\r\n            this.props.requestCollection(this.props.currentPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.computedMatch.params.keyword !== this.props.computedMatch.params.keyword && (history.location.pathname !== '/photos' && history.location.pathname !== '/collections')) {\r\n            console.log(\"FROM UPDATEEE\");\r\n            this.props.requestPagination(1);\r\n            this.props.requestSearchPhotos(this.props.currentPage, this.props.computedMatch.params.keyword);\r\n            this.props.requestPagingType('search_photos');\r\n        }\r\n    }\r\n\r\n    renderSearchHeader = () => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-white mb-0\">Search Results</h2>\r\n                <p className=\"text-warning mb-0\">{this.props.searchKeyword.keyword}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSelect = (key) => {\r\n        this.props.requestPagination(1);\r\n        if (key === 'photos') {\r\n            console.log(\"FROM TABSSS\");\r\n            this.props.requestSearchPhotos(this.props.currentPage, this.props.computedMatch.params.keyword);\r\n            this.props.requestPagingType('search_photos');\r\n        }\r\n        else {\r\n            this.props.requestSearchCollections(this.props.currentPage, this.props.computedMatch.params.keyword);\r\n            this.props.requestPagingType('search_collections');\r\n\r\n        }\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        return (\r\n            <div>\r\n                {this.renderSearchHeader()}\r\n                <Tabs className=\"mt-4\" defaultActiveKey=\"photos\" onSelect={this.handleSelect} id=\"uncontrolled-tab-example\">\r\n                    <Tab eventKey=\"photos\" title=\"Photos\">\r\n                        <CardColumns className=\"my-5\">\r\n                            <PhotosList />\r\n                        </CardColumns>\r\n                    </Tab>\r\n                    <Tab eventKey=\"collections\" title=\"Collections\">\r\n                        <CardColumns className=\"my-5\">\r\n                            <CollectionList />\r\n                        </CardColumns>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderContent = () => {\r\n        switch (this.props.pagingType) {\r\n            case 'search_photos':\r\n                return this.renderSearchResults();\r\n            case 'search_collections':\r\n                return this.renderSearchResults();\r\n            case 'photos':\r\n                return (\r\n                    <div>\r\n                        <h2 className=\"text-white font-weight-bold\">Photos</h2>\r\n                        <small className=\"text-warning\">Check latest photos in Gallery</small>\r\n                        <blockquote className=\"blockquote mb-0 text-secondary w-75\">\r\n                            <small>\r\n                                {' '}\r\n                                Photography is a kind of virtual reality, and it helps if you can create the illusion of being in an interesting world.{' '}\r\n                            </small>\r\n                            <footer className=\"blockquote-footer text-left\">\r\n                                Steven Pinker\r\n                            </footer>\r\n                        </blockquote>\r\n                        <CardColumns className=\"my-5\">\r\n                            <PhotosList />\r\n                        </CardColumns>\r\n                    </div>\r\n                )\r\n            case 'collections':\r\n                return (\r\n                    <div>\r\n                        <h2 className=\"text-white font-weight-bold\">Collections</h2>\r\n                        <small className=\"text-warning\">Check latest collections in Gallery</small>\r\n                        <blockquote className=\"blockquote mb-0 text-secondary w-75\">\r\n                            <small>\r\n                                {' '}\r\n                                Life is like a camera. Just focus on what’s important and capture the good times, develop from the negatives and if things don’t work out, just take another shot.{' '}\r\n                            </small>\r\n                        </blockquote>\r\n\r\n                        <CardColumns className=\"my-5\">\r\n                            <CollectionList />\r\n                        </CardColumns>\r\n                    </div>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavElement />\r\n                <Container className=\"my-4\">\r\n\r\n                    {this.renderContent()}\r\n\r\n                    <Pagination />\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        searchKeyword: state.searchKeyword,\r\n        pagingType: state.pagingType\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestCollection, requestSearchCollections, requestSearchPhotos, requestPagingType, requestPagination })(SearchResults); ","import {\r\n    RECEIVE_PHOTOS,\r\n    REQUEST_PHOTOS,\r\n    REQUEST_SEARCH_PHOTOS,\r\n    REQUEST_PAGINATION,\r\n    REQUEST_PAGINATION_TYPE,\r\n    RECEIVE_COLLECTIONS,\r\n    REQUEST_COLLECTIONS,\r\n    REQUEST_SEARCH_COLLECTIONS,\r\n    RECEIVE_COLLECTION_PHOTOS,\r\n    REQUEST_COLLECTION_PHOTOS,\r\n    REQUEST_COLLECTION_ID,\r\n    REQUEST_DOWNLOAD_PHOTO,\r\n    RECEIVE_DOWNLOAD_PHOTO ,\r\n    REQUEST_RELATED_COLLECTIONS,\r\n    RECEIVE_RELATED_COLLECTIONS\r\n}\r\n    from './types';\r\n\r\nexport const requestPhotos = (page) => {\r\n    return {\r\n        type: REQUEST_PHOTOS,\r\n        payload: page,\r\n    }\r\n};\r\n\r\nexport const receivePhotos = (data) => {\r\n    return {\r\n        type: RECEIVE_PHOTOS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestSearchPhotos = (page, keyword) => {\r\n    return {\r\n        type: REQUEST_SEARCH_PHOTOS,\r\n        payload: {\r\n            page,\r\n            keyword,\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestCollection = (page) => {\r\n    return {\r\n        type: REQUEST_COLLECTIONS,\r\n        payload: page,\r\n    }\r\n};\r\n\r\nexport const receiveCollections = (data) => {\r\n    return {\r\n        type: RECEIVE_COLLECTIONS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestSearchCollections = (page, keyword) => {\r\n    return {\r\n        type: REQUEST_SEARCH_COLLECTIONS,\r\n        payload: {\r\n            page,\r\n            keyword\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestCollectionPhotos = (page, id) => {\r\n    return {\r\n        type: REQUEST_COLLECTION_PHOTOS,\r\n        payload: {\r\n            page,\r\n            id\r\n        }\r\n    }\r\n};\r\n\r\nexport const receiveCollectionsPhotos = (data) => {\r\n    return {\r\n        type: RECEIVE_COLLECTION_PHOTOS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestRelatedCollections = (page, id) => {\r\n    return {\r\n        type: REQUEST_RELATED_COLLECTIONS,\r\n        payload: {\r\n            page,\r\n            id\r\n        }\r\n    }\r\n};\r\n\r\nexport const receiveRelatedCollections = (data) => {\r\n    return {\r\n        type: RECEIVE_RELATED_COLLECTIONS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestDownloadPhoto = (id) => {\r\n    return {\r\n        type: REQUEST_DOWNLOAD_PHOTO,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const receiveDownloadPhoto = (data) => {\r\n    return {\r\n        type: RECEIVE_DOWNLOAD_PHOTO,\r\n        payload: data\r\n    }\r\n};\r\n\r\n// GENERAL ACTIONS\r\n\r\nexport const requestPagination = (page) => {\r\n    return {\r\n        type: REQUEST_PAGINATION,\r\n        payload: page\r\n    }\r\n};\r\n\r\n\r\nexport const requestPagingType = (pageType) => {\r\n    return {\r\n        type: REQUEST_PAGINATION_TYPE,\r\n        payload: pageType\r\n    }\r\n};\r\n\r\nexport const requestCollectionId = (id) => {\r\n    return {\r\n        type: REQUEST_COLLECTION_ID,\r\n        payload: id\r\n    }\r\n};\r\n\r\n"],"sourceRoot":""}