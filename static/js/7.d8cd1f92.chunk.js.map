{"version":3,"sources":["containers/search/Search.js","containers/navigation/Navigation.js","components/card/GalleryCard.js","containers/pagination/Pagination.js","components/collection-card/CollectionCard.js","components/navbar/Navbar.js","containers/Collections/CollectionsPhotos.js","store/actions/index.js"],"names":["Search","props","handleChange","e","setState","keyword","target","value","onSubmit","state","history","push","onKeypress","key","renderSearchButton","location","pathname","variant","onClick","className","prevProps","pagingType","this","onChange","onKeyPress","placeholder","React","Component","connect","currentPage","searchKeyword","requestSearchPhotos","requestCollection","requestPhotos","requestSearchCollections","requestPagination","Navigation","getCollections","getPhotos","to","GalleryCard","useState","modalShow","setModalShow","alert","useAlert","src","url","loading","isVisible","Img","Body","Title","user","profile_image","small","roundedCircle","name","downloadImageId","id","show","icon","faLongArrowAltDown","Text","description","Footer","created_at","faHeart","likes","size","aria-labelledby","centered","Header","closeButton","style","backgroundImage","imageurl","onHide","Pagination","getNext","collectionsId","requestCollectionPhotos","nextPage","getPrev","prevPage","disabled","rel","CollectionCard","undefined","previewPhotos","previewImages","map","request","xs","urls","thumb","tags","tag","pill","title","totalPhotos","NavElement","sticky","bg","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","inline","CollectionsPhotos","downloadImage","imageId","requestDownloadPhoto","renderPhotosList","collectionPhotos","photo","convertTime","full","renderRelatedCollections","relatedCollections","preview_photos","total_photos","requestCollectionId","requestRelatedCollections","computedMatch","params","createdAt","Date","toLocaleDateString","weekday","year","month","day","md","Object","values","page","type","REQUEST_PHOTOS","payload","REQUEST_SEARCH_PHOTOS","REQUEST_COLLECTIONS","REQUEST_SEARCH_COLLECTIONS","REQUEST_COLLECTION_PHOTOS","REQUEST_RELATED_COLLECTIONS","REQUEST_DOWNLOAD_PHOTO","REQUEST_PAGINATION","requestPagingType","pageType","REQUEST_PAGINATION_TYPE","REQUEST_COLLECTION_ID"],"mappings":"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","file":"static/js/7.d8cd1f92.chunk.js","sourcesContent":["import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Search.scss';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    requestSearchPhotos, \r\n    requestPhotos, \r\n    requestSearchCollections, \r\n    requestCollection,\r\n    requestPagination } from '../../store/actions';\r\nimport history from '../../routes/history';\r\n\r\nclass Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.pagingType !== this.props.pagingType){\r\n            this.setState({\r\n                keyword : \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        // const { pagingType , requestPhotos , requestCollection } = this.props ;\r\n        this.setState({\r\n            keyword: e.target.value\r\n        })\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                keyword: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        this.setState({\r\n            keyword: e.target.value\r\n        })\r\n        if(this.state.keyword){\r\n            history.push(`/search/${this.state.keyword}`);       \r\n        }\r\n    }\r\n\r\n    onKeypress = (e) =>{\r\n        if(e.key == 'Enter'){\r\n            history.push(`/search/${this.state.keyword}`);       \r\n        }\r\n    }\r\n\r\n    renderSearchButton = () => {\r\n        if(history.location.pathname == '/'){\r\n            return(\r\n                <Button variant=\"warning\" onClick={(e) => this.onSubmit(e)} className=\"border-raduis-3 text-white font-weight-bold px-5 searchBtn\">Search</Button>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <Button variant=\"outline-warning\" className=\"border-raduis-3\" onClick={(e) => this.onSubmit(e)}><i className=\"fa fa-search\"></i></Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-100\">\r\n                <div className={'d-flex ' + (history.location.pathname == '/' ? 'search-input' : '')}>\r\n                <FormControl \r\n                    value = {this.state.keyword || \"\"}\r\n                    onChange={e => this.handleChange(e)}\r\n                    onKeyPress={e => this.onKeypress(e)}\r\n                    placeholder=\"Search in Gallery\" \r\n                    className=\"mr-2 border-0 shadow border-raduis-3\" />\r\n                    {this.renderSearchButton()}\r\n                    {/* <InputGroup size=\"lg\" className=\"mr-3 mt-4\">\r\n                        <FormControl\r\n                            value = {this.state.keyword}\r\n                            aria-label=\"Large\"\r\n                            onChange={e => this.handleChange(e)}\r\n                            placeholder=\"Search for images with keywords ( Sky , love .. etc )\"\r\n                            className=\"border-0 shadow border-raduis-3\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\" />\r\n                    </InputGroup>\r\n\r\n                    <Button variant=\"warning\" onClick={(e) => this.onSubmit(e)} className=\"border-raduis-3 text-white font-weight-bold px-5\">Search</Button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        pagingType: state.pagingType , \r\n        searchKeyword: state.searchKeyword\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestSearchPhotos, requestCollection, requestPhotos, requestSearchCollections , requestPagination })(Search);","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Navigation.scss';\r\nimport { connect } from 'react-redux';\r\nimport { requestCollection, requestPhotos, requestPagination, requestSearchCollections, requestSearchPhotos } from '../../store/actions';\r\nimport { Link } from \"react-router-dom\";\r\nimport {Nav} from 'react-bootstrap';\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    getCollections = () => {\r\n        const { requestCollection , requestPagination } = this.props ;\r\n        requestCollection(1);\r\n        requestPagination(1);\r\n    }\r\n\r\n    getPhotos = () => {\r\n        const { requestPhotos , requestPagination } = this.props ;\r\n        requestPhotos(1);\r\n        requestPagination(1);\r\n    }\r\n\r\n    render() {\r\n        const { pagingType } = this.props;\r\n        return (\r\n            <div className=\"text-white\">\r\n                <Link to=\"/photos\" onClick={this.getPhotos} className={'navLink ' + (this.props.pagingType == 'photos' ? 'text-warning' : 'text-white mx-2')}>Photos</Link>\r\n                <Link to=\"/collections\" onClick={this.getCollections} className={'navLink '+(this.props.pagingType == 'collections' ? 'text-warning mx-2' : 'text-white mx-2')}>Collections</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pagingType: state.pagingType\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestPhotos, requestCollection, requestPagination, requestSearchCollections, requestSearchPhotos })(Navigation);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLongArrowAltDown ,faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAlert } from 'react-alert'\r\nimport LazyImage from \"react-lazy-progressive-image\";\r\nimport Loader from '../loader/Loader';\r\nimport {Modal , ModalDialog  , ModalHeader  , ModalTitle  , ModalBody ,ModalFooter , Button } from 'react-bootstrap'\r\nimport './GalleryCard.scss';\r\n\r\nconst GalleryCard = (props) => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const alert = useAlert();\r\n    function download() {\r\n        props.downloadImageId(props.id)\r\n        alert.show('Thanks , Wait Downloading');\r\n    }\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n        // console.log(props);\r\n        return (\r\n          <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                {/* <FontAwesomeIcon onClick={download} icon={faLongArrowAltDown} className=\"text-warning downloadIcon\"/> */}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"p-0\">\r\n                <div className=\"backgroundImg\" style={{ backgroundImage: 'url(' + props.imageurl + ')' }}> </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"border-0 shadow mb-3\" onClick={() => setModalShow(true)}>\r\n                <div className=\"zoom-in-image\">\r\n                <LazyImage               \r\n                    placeholder={\"https://cdn.dribbble.com/users/2046015/screenshots/6015680/08_404.gif\"}\r\n                    src={props.url}\r\n                >\r\n                    {(src, loading, isVisible) =><Card.Img variant=\"top\"  src={src} />\r\n}\r\n                </LazyImage>\r\n                </div>\r\n                <Card.Body>\r\n                    <Card.Title className=\"d-flex justify-content-between\">\r\n                        <div className=\"userData\">\r\n                            <Image src={props.user.profile_image.small} roundedCircle />\r\n                            <small className=\"mx-2\">{props.user.name}</small>\r\n                        </div>\r\n                    <FontAwesomeIcon onClick={download} icon={faLongArrowAltDown} className=\"text-warning downloadIcon\"/>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {props.description}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer className=\"d-flex justify-content-between\">\r\n                    <small className=\"text-muted\">{props.created_at}</small>\r\n                    <small className=\"text-muted\">\r\n                        <FontAwesomeIcon icon={faHeart} className=\"mr-1\"/>\r\n                        {props.likes}\r\n                    </small>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                imageurl = {props.url}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    requestPagination,\r\n    requestPhotos,\r\n    requestSearchPhotos,\r\n    requestCollection,\r\n    requestSearchCollections,\r\n    requestCollectionPhotos\r\n} from '../../store/actions/index';\r\nclass Pagination extends React.Component {\r\n    getNext = () => {\r\n        const { collectionsId , \r\n            searchKeyword , \r\n            requestPagination , \r\n            requestPhotos , \r\n            requestSearchCollections , \r\n            requestSearchPhotos , \r\n            currentPage , \r\n            pagingType , \r\n            requestCollection ,\r\n            requestCollectionPhotos } = this.props;\r\n        let nextPage = currentPage + 1;\r\n        requestPagination(nextPage);\r\n        if (pagingType === 'photos') {\r\n            requestPhotos(nextPage);\r\n        }\r\n        else if (pagingType === 'search_photos') {\r\n            requestSearchPhotos(nextPage, searchKeyword.keyword);\r\n        }\r\n        else if (pagingType === 'collections') {\r\n            requestCollection(nextPage);\r\n        }\r\n        else if (pagingType === 'search_collections') {\r\n            requestSearchCollections(nextPage,searchKeyword.keyword);\r\n        }\r\n        else if (pagingType === 'collection-photos') {\r\n            requestCollectionPhotos(nextPage, collectionsId);\r\n        }\r\n    }\r\n\r\n    getPrev = () => {        \r\n        const { collectionsId , \r\n            searchKeyword , \r\n            requestPagination , \r\n            requestPhotos , \r\n            requestSearchCollections , \r\n            requestSearchPhotos , \r\n            currentPage , \r\n            pagingType ,\r\n            requestCollectionPhotos } = this.props;\r\n        if (currentPage > 1) {\r\n            let prevPage = currentPage - 1;\r\n            requestPagination(prevPage);\r\n            if (pagingType === 'photos') {\r\n                requestPhotos(prevPage);\r\n            }\r\n            else if (pagingType === 'search_photos') {\r\n               requestSearchPhotos(prevPage, searchKeyword.keyword);\r\n            }\r\n            else if (pagingType === 'collections') {\r\n               requestCollection(prevPage);\r\n            }\r\n            else if (pagingType === 'search_collections') {\r\n                requestSearchCollections(prevPage, searchKeyword.keyword);\r\n            }\r\n            else if (pagingType === 'collection-photos') {\r\n                requestCollectionPhotos(prevPage, collectionsId);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n                <Button variant=\"outline-warning\" onClick={this.getPrev} className=\"border-raduis-3 text-white px-5\" disabled={this.props.currentPage === 1}>Prev</Button>\r\n                <h6 className=\"text-white mb-0\">Page {this.props.currentPage}</h6>\r\n                <Button variant=\"outline-warning\" onClick={this.getNext} className=\"border-raduis-3 text-white px-5\" rel=\"last\">Next</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.currentPage,\r\n        pagingType: state.pagingType,\r\n        searchKeyword: state.searchKeyword,\r\n        collectionsId: state.collectionsId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestPagination, requestPhotos, requestSearchPhotos, requestCollection, requestSearchCollections, requestCollectionPhotos })(Pagination);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './CollectionCard.scss';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CollectionCard = (props) => {\r\n    if (props.previewPhotos !== undefined) {\r\n        var previewImages = props.previewPhotos.map((request) => <Col xs={6} key={request.urls.thumb}> <div className=\"backgroundImg\" style={{ backgroundImage: 'url(' + request.urls.thumb + ')' }}> </div></Col>)\r\n        var tags = props.tags.map((tag) => <Badge pill variant=\"warning\" className=\"mr-2\" key={tag.title}>{tag.title}</Badge>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={`/collections/${props.id}`} >\r\n                <Card className=\"border-0 shadow mb-3\">\r\n                    <Container>\r\n                        <Row>\r\n                            {previewImages}\r\n                        </Row>\r\n                    </Container>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            {/* <Image src={props.previewPhotos} roundedCircle /> */}\r\n                            <small className=\"text-secondary\">Collection</small>\r\n                            <strong className=\"d-block\">{props.title}</strong>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            {props.description}\r\n                        </Card.Text>\r\n                        {tags}\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"d-flex justify-content-between\">\r\n                        <small className=\"text-muted\">Total Photos : {props.totalPhotos}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionCard;\r\n","import React from 'react' ;\r\nimport {Navbar , Nav , Form , FormControl , Button} from 'react-bootstrap';\r\nimport './Navbar.scss';\r\nimport Navigation from '../../containers/navigation/Navigation'\r\nimport Search from '../../containers/search/Search';\r\nconst NavElement = () => {\r\n\r\n    return(\r\n        <Navbar sticky=\"top\"  bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"md\">\r\n            <Navbar.Brand href=\"/\">Gallery</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n               <Navigation />\r\n            </Nav>\r\n            <Form inline>\r\n                <Search />\r\n            </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavElement ;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestCollectionPhotos, requestCollectionId, requestDownloadPhoto, requestRelatedCollections, requestPagination } from '../../store/actions/index';\r\nimport GalleryCard from '../../components/card/GalleryCard';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Pagination from '../pagination/Pagination';\r\nimport CollectionCard from '../../components/collection-card/CollectionCard';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Navigation from '../../containers/navigation/Navigation';\r\nimport NavElement from '../../components/navbar/Navbar';\r\n\r\nclass CollectionsPhotos extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { requestCollectionPhotos, requestCollectionId, requestRelatedCollections , requestPagination } = this.props;\r\n        requestCollectionPhotos(1, this.props.computedMatch.params.id);\r\n        requestCollectionId(this.props.computedMatch.params.id);\r\n        requestRelatedCollections(1, this.props.computedMatch.params.id);\r\n        requestPagination(1);\r\n    }\r\n\r\n    downloadImage = (imageId) => {\r\n        const { requestDownloadPhoto } = this.props;\r\n        requestDownloadPhoto(imageId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { requestCollectionPhotos, requestCollectionId, requestRelatedCollections, requestPagination } = this.props;\r\n        if (\r\n            prevProps.computedMatch.params.id !== this.props.computedMatch.params.id\r\n        ) {\r\n            requestCollectionPhotos(1, this.props.computedMatch.params.id);\r\n            requestPagination(1);\r\n            requestCollectionId(this.props.computedMatch.params.id);\r\n            requestRelatedCollections(1, this.props.computedMatch.params.id);\r\n        }\r\n    }\r\n\r\n    renderPhotosList = () => {\r\n        const { collectionPhotos } = this.props;\r\n        if (!collectionPhotos) {\r\n            return (\r\n                <div>Loading ...</div>\r\n            )\r\n        }\r\n        return collectionPhotos.map(photo => {\r\n            photo.created_at = this.convertTime(photo.created_at)\r\n            return (\r\n                <GalleryCard\r\n                    id={photo.id}\r\n                    key={photo.id}\r\n                    url={photo.urls.full}\r\n                    name={photo.id}\r\n                    created_at={photo.created_at}\r\n                    description={photo.description}\r\n                    likes={photo.likes}\r\n                    user={photo.user}\r\n                    downloadImageId={this.downloadImage}\r\n\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    renderRelatedCollections = () => {\r\n        const { relatedCollections } = this.props;\r\n        if (!relatedCollections) {\r\n            return (\r\n                <div className=\"text-white\"> Still Loading ... </div>\r\n            )\r\n        }\r\n        else {\r\n            return relatedCollections.map(photo => {\r\n                return (\r\n                    <Col xs={12} key={photo.id}>\r\n                        <CollectionCard\r\n                            id={photo.id}\r\n                            key={photo.id}\r\n                            previewPhotos={photo.preview_photos}\r\n                            tags={photo.tags}\r\n                            title={photo.title}\r\n                            totalPhotos={photo.total_photos}\r\n                            description={photo.description}\r\n                        />\r\n                    </Col>\r\n                )\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    convertTime(createdAt) {\r\n        let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n        let created_at_date = new Date(createdAt).toLocaleDateString('en-US', options);\r\n        return created_at_date;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavElement />\r\n                <div className=\"photosContainer my-5\">\r\n                    <Row>\r\n                        <Col md={3}>\r\n                        <h5 className=\"text-warning mb-4\">Related Collections</h5>\r\n                            <Row>                               \r\n                                {this.renderRelatedCollections()}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col md={9}>\r\n                            <h2 className=\"text-white\">Collection's Photos</h2>\r\n                            <blockquote className=\"blockquote mb-0 text-white\">\r\n                                <small>\r\n                                    {' '}\r\n                                    The picture that you took with your camera is the imagination you want to create with reality.{' '}\r\n                                </small>\r\n                                <footer className=\"blockquote-footer text-left\">\r\n                                    Scott Lorenzo\r\n                                </footer>\r\n                            </blockquote>\r\n                            \r\n                            \r\n                            <CardColumns className=\"my-5\">\r\n                                {this.renderPhotosList()}\r\n                            </CardColumns>\r\n                            <Pagination />\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        collectionPhotos: Object.values(state.collectionPhotos),\r\n        relatedCollections: Object.values(state.relatedCollections)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { requestPagination, requestCollectionPhotos, requestCollectionId, requestDownloadPhoto, requestRelatedCollections })(CollectionsPhotos);","import {\r\n    RECEIVE_PHOTOS,\r\n    REQUEST_PHOTOS,\r\n    REQUEST_SEARCH_PHOTOS,\r\n    REQUEST_PAGINATION,\r\n    REQUEST_PAGINATION_TYPE,\r\n    RECEIVE_COLLECTIONS,\r\n    REQUEST_COLLECTIONS,\r\n    REQUEST_SEARCH_COLLECTIONS,\r\n    RECEIVE_COLLECTION_PHOTOS,\r\n    REQUEST_COLLECTION_PHOTOS,\r\n    REQUEST_COLLECTION_ID,\r\n    REQUEST_DOWNLOAD_PHOTO,\r\n    RECEIVE_DOWNLOAD_PHOTO ,\r\n    REQUEST_RELATED_COLLECTIONS,\r\n    RECEIVE_RELATED_COLLECTIONS\r\n}\r\n    from './types';\r\n\r\nexport const requestPhotos = (page) => {\r\n    return {\r\n        type: REQUEST_PHOTOS,\r\n        payload: page,\r\n    }\r\n};\r\n\r\nexport const receivePhotos = (data) => {\r\n    return {\r\n        type: RECEIVE_PHOTOS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestSearchPhotos = (page, keyword) => {\r\n    return {\r\n        type: REQUEST_SEARCH_PHOTOS,\r\n        payload: {\r\n            page,\r\n            keyword,\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestCollection = (page) => {\r\n    return {\r\n        type: REQUEST_COLLECTIONS,\r\n        payload: page,\r\n    }\r\n};\r\n\r\nexport const receiveCollections = (data) => {\r\n    return {\r\n        type: RECEIVE_COLLECTIONS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestSearchCollections = (page, keyword) => {\r\n    return {\r\n        type: REQUEST_SEARCH_COLLECTIONS,\r\n        payload: {\r\n            page,\r\n            keyword\r\n        }\r\n    }\r\n};\r\n\r\nexport const requestCollectionPhotos = (page, id) => {\r\n    return {\r\n        type: REQUEST_COLLECTION_PHOTOS,\r\n        payload: {\r\n            page,\r\n            id\r\n        }\r\n    }\r\n};\r\n\r\nexport const receiveCollectionsPhotos = (data) => {\r\n    return {\r\n        type: RECEIVE_COLLECTION_PHOTOS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestRelatedCollections = (page, id) => {\r\n    return {\r\n        type: REQUEST_RELATED_COLLECTIONS,\r\n        payload: {\r\n            page,\r\n            id\r\n        }\r\n    }\r\n};\r\n\r\nexport const receiveRelatedCollections = (data) => {\r\n    return {\r\n        type: RECEIVE_RELATED_COLLECTIONS,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const requestDownloadPhoto = (id) => {\r\n    return {\r\n        type: REQUEST_DOWNLOAD_PHOTO,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const receiveDownloadPhoto = (data) => {\r\n    return {\r\n        type: RECEIVE_DOWNLOAD_PHOTO,\r\n        payload: data\r\n    }\r\n};\r\n\r\n// GENERAL ACTIONS\r\n\r\nexport const requestPagination = (page) => {\r\n    return {\r\n        type: REQUEST_PAGINATION,\r\n        payload: page\r\n    }\r\n};\r\n\r\n\r\nexport const requestPagingType = (pageType) => {\r\n    return {\r\n        type: REQUEST_PAGINATION_TYPE,\r\n        payload: pageType\r\n    }\r\n};\r\n\r\nexport const requestCollectionId = (id) => {\r\n    return {\r\n        type: REQUEST_COLLECTION_ID,\r\n        payload: id\r\n    }\r\n};\r\n\r\n"],"sourceRoot":""}